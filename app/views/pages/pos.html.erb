<!DOCTYPE html>
<html>
<!--
UPCS
7501493870543
7501128112109
7501439310089	
7503000422221
7501836002969 (0 Piezas)
	-->
<head>
    <title>POS</title>
    <style>
	    /*body, html {
	    	height: 98%;
	    	overflow-y:hidden;
	    	background-color: #E6E6E6;
		}*/
		body {
			background: #f9f7f6;
			color: #404d5b;
			font-weight: 500;
			font-size: 1.15em;
			overflow-y:hidden;
			/*(font-family: 'Raleway', Arial, sans-serif;*/
		}		
		/*****************************Gestión de Alertas*****/
		.alerts {
			z-index: 1100;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		    text-align:center;
		    background: rgba(0,0,0,0.7);
		    display:none;
		}
		.frameAlert {
			z-index: 1111;
			position: fixed;
			top: 19%;
			left: 15%;
			width: 70%;
			height: 70%;
			background-color: white;
			border-radius: 10px;
			padding: 3% 2% 1% 2%;
			/*overflow-y:scroll;*/
		}		
		.btnAlert {
			width: 30%;
			height: 20%;
			font-weight: bold;
			text-align: center;
			color:white;
			font-size: 130%;
			padding: 2% 0 2% 0;
			background-color:#3498db;
			border: 1px solid #3498db;
		}		
		/*****************************Grid de Ventas y Lotes*/
		.gridVenta {
			width: 100%;
		}
		.headGridVenta {
			background-color: #3498db;
			height: 2em;
			border: 0px solid black;
			color:white;
			padding-left: 1%;
			font-weight: bold;
		}
		.rowGridVenta {
			height: 2em;
			border: 0px solid black;
			color:black;
			padding-left: 1%;
			font-size: 100%;
			border-bottom: 1px solid #E6E6E6;
			padding:1% 1% 1% 1%;
		}
		.trSelected {
			background-color: red;
		}
		.rowGridVenta input[type=text] {
	        text-align:center;
	        width: 1.5em;
    	}	
    	/* CORRECCION */	
		.rowGridVentaJulio {
			height: 2em;
			border: 0px solid black;
			color:black;
			padding-left: 1%;
			font-size: 100%;
			border-bottom: 1px solid #E6E6E6;
			padding:1% 1% 1% 1%;
		}
		.rowGridVentaJulio input[type=text] {
	        text-align:center;
	        width: 1.5em;
    	}			
		/*TERMINA */    	
    	.divGridVenta {
    		/*background-color: red;*/
    		height: 16em;
    		overflow-y: scroll;
    	}
    	.gridVentaOpciones {
    		font-weight: bold;
    		color: #9b59b6;
    	}
		.divGridTotales {
			height: 6em;
		}
		.gridTotales {
			width: 100%;
			height: 100%;
		}
		.tdGridTotal{
			border: 0px solid black;
			font-weight: bold;
		}
		.allFrame {
			z-index: 110;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
		    text-align:center;
		    background: rgba(0,0,0,0.7);
		    display:none;
		}
		.listadoLotes {
			z-index: 111;
			position: fixed;
			top: 19%;
			left: 15%;
			width: 70%;
			height: 70%;
			background-color: white;
			border-radius: 10px;
			padding: 3% 2% 1% 2%;
			/*overflow-y:scroll;*/
		}
		.listadoLotes input[type=text] {
			width: 80%;
			text-align: center;
			font-weight: bold;
		}
		.listadoLotes input[type=checkbox] {
			text-align: center;
		}
		.tdHeadLote input[type=button] {
			color:blue;
			background-color: white;
			width: 100%;
			font-weight: bold;
			font-size: 110%;
		}
		.tdHeadLote {
			background-color: #2980b9;
			height: 3em;
			border: 0px solid black;
			color:white;
			padding-left: 1%;
			font-weight: bold;			
		}	
		.tdRowLote {
			height: 2em;
			border: 0px solid black;
			color:black;
			padding-left: 1%;
			font-size: 130%;
			border-bottom: 1px solid #3498db;
			padding:1% 3% 1% 3%;			

		}
		.tdRowLote a {
			color:#34495e;
			font-weight: bold;
		}
		.tdRowBtnLote {
			height: 2em;
			border: 0px solid black;
			color:black;
			padding-left: 1%;
			font-size: 130%;
			border-bottom: 1px solid #3498db;
		}		

		.btnLote {
			width: 30%;
			height: 10%;
			font-weight: bold;
			text-align: center;
			color:white;
			font-size: 130%;
			background-color:#3498db;
			border: 1px solid #3498db;
		}
		/**********************************Metodos de Pago***/
		.rowGridMetodos {
			height: 3em;
			border: 0px solid black;
			color:#7f8c8d;
			padding-left: 1%;
			font-size: 130%;
			border-bottom: 1px solid #7f8c8d;
			padding:3% 3% 3% 3%;
			font-weight: bold;
		}
		.rowGridMetodos input[type=text] {
	        text-align:center;
	        width: 100%;
    	}
    	.txtGridPartner {
    		border-radius: 3px;
    		/*padding: 1% 1% 1% 1%;*/
    	}
		/**********************************Teclado Númerico*/
		.tabKeyBoard {
		}
		.tabKeyBoard td{
			border:0px solid black;
			height: 25%;
			padding: 1% 1% 1% 1%;
			background-color: white;
		}
		.divKeyKB {
			height: 100%;
			border:0px solid black;
			border-radius: 10px;
			text-align: center;
			padding: 10% 1% 4% 1%;
			font-size: 250%;
			color:#3498db;
		}		
		/**********************************Side Bar**********/
		.sideBar {
			background-color: #3498db;
			height:38em;
		}
		#emptyBar {
			text-align: center;			
			vertical-align: middle;
		}
		#emptyBar p {
			font-weight: bold;
			font-size: 250%;
			color:orange;
			-moz-transform: rotate(-90.0deg);  /* FF3.5+ */
			-o-transform: rotate(-90.0deg);  /* Opera 10.5 */
			-webkit-transform: rotate(-90.0deg);  /* Saf3.1+, Chrome */
			filter:  progid:DXImageTransform.Microsoft.BasicImage(rotation=0.083);  /* IE6,IE7 */
			-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0.083)";
		}
		#menuBar {

		}
		#menuBar:hover {
			-moz-box-shadow: 0 0 10px #ccc; -webkit-box-shadow: 0 0 10px #ccc; box-shadow: 0 0 10px #ccc;
		}
		-fullBar {
			border-bottom-left-radius: 10px;
			border-bottom-right-radius: 10px;
		}
		#fullBar {
			-webkit-transition:width 300ms ease-in-out, height 300ms ease-in-out;
			-moz-transition:width 300ms ease-in-out, height 300ms ease-in-out;
			-o-transition:width 300ms ease-in-out, height 300ms ease-in-out;
			transition:width 300ms ease-in-out, height 300ms ease-in-out;			
		}
		/****************************************************/
		#tdImpuestosVenta {
			text-align: right;
			padding: 3px 3px 3px 3px;
			font-size: 220%;
			font-weight: bold;
		}
		#tdCambioVenta {
			text-align: right;
			padding: 3px 3px 3px 3px;
			font-size: 220%;
			font-weight: bold;
		}		
		#btn_total {
			width: 100%;
			height: 100%;
			font-weight: bold;
			text-align: right;
			font-size: 250%;
			color:white;
			background-color: #40FF00;
			border: 1px solid #40FF00;
		}
		.totalCubierto {
			background-color: orange;
		}
		/*********************Panel izquierdo****************/
		#leftTopDiv {
			background-color: #3498db;
		}
		#rightTopDiv {
			background-color: yellow;
		}
		#leftBottomDiv {
			background-color: blue;
		}
		#rightBottomDiv {
			background-color: green;
		}
		/********************* Indicadores ****************/
		.tdIndicadores {
			background-color: white;
			margin: 1% 1% 1% 2%;
		}
		.tdIndicadoresHeader {
			height: 20%;
			text-align: center;
			border:0px solid red;
			font-weight: bold;
			padding-top: 30%; 
		}
		.tdIndicadoresValor {
			height: 80%;
			border:0px solid red;
			text-align: center;			
			font-weight: bold;
			padding-top: 10%;
			font-size: 190%;
		}
		.tdExtraHeader {
			height: 20%;
			text-align: center;
			border:0px solid red;
			font-weight: bold;
			padding-top: 5%; 
			padding-bottom: 5%; 
			font-size: 140%;
		}
		.tdExtraValor {
			height: 10%;
			border:0px solid red;
			text-align: center;			
			font-weight: bold;
			padding-top: 3%;
			padding-bottom: 1%;
			font-size: 110%;
			border-top: 1px solid #bdc3c7;
			border-bottom: 0px solid #bdc3c7;
		}
		.tdExtraDescripcion {
			height: 10%;
			border:0px solid red;
			text-align: center;			
			font-weight: bold;
			/*padding-top: 10%;
			padding-bottom: 10%;*/
			font-size: 60%;
			border-top: 0px solid #bdc3c7;
			border-bottom: 1px solid #bdc3c7;
		}
		.tdExtraImg {
			border-top: 1px solid #bdc3c7;
			/*height: 10%;
			border:0px solid red;
			text-align: center;			
			font-weight: bold;
			border-top: 1px solid #bdc3c7;
			border-bottom: 0px solid #bdc3c7;*/
		}					
    </style>
</head>
<body>
	<nav class="navbar navbar-default">
	  <div class="container-fluid">
	    <div class="navbar-header">
		<!--<div class="container demo-2">
				<div class="main clearfix">-->
					<div class="column">
						<div id="dl-menu" class="dl-menuwrapper">
							<button class="dl-trigger" style="background-color:#3498db;">Open Menu</button>
							<ul class="dl-menu" style="background-color:#3498db;width:200%;">
								<li>
									<a href="#">Abonos / Edo. Cuenta</a>
								</li>
								<li>
									<a href="#">Apartados</a>
								</li>
								<li>
									<a href="#">Consultar Precios</a>
								</li>
								<li>
									<a href="#">Consultar Invantario</a>
								</li>
								<li>
									<a href="#">Solicitud de crédito</a>
								</li>
								<li>
									<a href="#">Devoluciones</a>
								</li>
								<li>
									<a href="#">Corte de caja</a>
								</li>		
								<li>
									<a href="/estadosdecuenta">Portal</a>
								</li>																		
							</ul>
						</div><!-- /dl-menuwrapper -->
					</div>
				<!--</div>
			</div>--><!-- /container -->	
	    </div>
	  </div>
	</nav>	
	<div id="allFrame" class="allFrame">
		<div id="listadoLotes" class="listadoLotes"  align="center"></div>
	</div>
	<div id="alert" class="alerts">
		<div id="frameAlert" class="frameAlert"  align="center"></div>
	</div>	
	<div id="sideBar" class="sideBar" style="width:3%;float:left;height:45em;">
		<div id="menuBar" style="width:100%;background-color:white;height:40em">&nbsp;</div>
		<div id="emptyBar" style="width:100%;background-color:white;height:4em"><p>0%</p></div>
		<div id="fullBar" style="width:100%;background-color:orange;height:1em">&nbsp;</div>
	</div>

	<div id="leftFrame" style="width:57%;float:left;height:38em;"><br>
	</div>
	<!-- Diego de Montemayor 1115 Sur, col. Monterrey Centro<br>Monterrey Nuevo León, CP. 64000<br>05-06-2014<br><b>ARI300430</b> -->
	<div id="rightFrame" style="width:35%;float:left;background-color:white;">
		<br>
		<div align="center">
			<img src="/rase.png" width="30%"/><br>
			Diego de Montemayor 1115 Sur, col. Monterrey Centro<br>
			Monterrey Nuevo León, CP. 64000<br>
		</div>		
		<hr>
		<div>
			<span class="input input--yoshiko">
				<input class="input__field input__field--yoshiko" type="text" id="input-10" />
				<label class="input__label input__label--yoshiko" for="input-10">
					<span class="input__label-content input__label-content--yoshiko" data-content="CLIENTE">CLIENTE</span>
				</label>
			</span>
		</div>
		<table id="tabOptions" width="100%" style="display:none;">
			<td align="right" width="25%" ><a  id="tab_op1" class="gridVentaOpciones">&nbsp;</a></td>
			<td align="right" width="25%" ><a  id="tab_op2" class="gridVentaOpciones">&nbsp;</a></td>
			<td align="right" width="25%" ><a  id="tab_op3" class="gridVentaOpciones">&nbsp;</a></td>
			<td align="right" width="25%" ><a  id="tab_op4" class="gridVentaOpciones">&nbsp;</a></td>
		<table>
		<table id="tabAction" width="100%" style="display:none;">
			<tr>
				<td id="act_empty" width="50%" ></td>
				<td id="act_switch" align="right" width="25%" ><a class="gridVentaOpciones gridView">Pagos</a></td>
				<td id="act_delete" align="right" width="25%" ><a class="gridVentaOpciones deleteGrid">Eliminar</a></td>
			</tr>
		</table> 
		<table id="tabActionMetodo" width="100%" style="display:none;">
			<tr>
				<td id="met_empty" width="50%" ></td>
				<td id="met_switch" align="right" width="25%" ><a class="gridVentaOpciones gridView">Productos</a></td>
				<td id="met_delete" align="right" width="25%" ><a class="gridVentaOpciones deleteGridMetodo">Eliminar</a></td>
			</tr>
		</table>		
		<div id="divGridVenta" class="divGridVenta" width="100%"></div>
		<hr>
		<div id="divGridTotales" class="divGridTotales" style="background-color:white;">
			<table id="gridTotales" class="gridTotales">
				<tr>
					<!--<td rowspan="2" class="tdGridTotal" width="60%"></td>-->
					<td  class="tdGridTotal" align="right" style="vertical-align:bottom;">Impuestos:</td>
					<td id="tdImpuestosVenta">$0.00</td>
				</tr>
				<tr>
					<!--<td rowspan="2" class="tdGridTotal" width="60%"></td>-->
					<td  class="tdGridTotal" align="right" style="vertical-align:bottom;">Cambio:</td>
					<td id="tdCambioVenta">$0.00</td>
				</tr>				
				<tr>
					<td colspan="2" class="tdGridTotal" height="100%;">
						<input type="button" class="btn_total" id="btn_total" value="TOTAL $0.00"/>
					</td>
				</tr>
			</table>
		</div>
		<br><br>
		<div id="divGridUpc" width="100%">
			<input type="text" class="txtGridUpc" id="txtGridUpc" size="60"/>
		</div>
		<br>
	</div>
</body>
<script type="text/javascript">
var metaVentas = 15499.09;
var restoVenta = 0;
var rowsSelected = [];
var metsSelected = [];
var rowsGrid = [];
var metodosPago = [];
var allPrice = {};
var currentProduct = "";
var jsonTicket = {
	total: 0,
	impuestos: 0,
	resto: 0,
	cambio: 0,
	selectedrows: rowsSelected,
	selectedmetodos: metsSelected,
	gridrows: rowsGrid,
	metodospago: metodosPago
};
var jsonMetodos = ["M1", "M2", "M3", "M4"]
$( document ).ready(function() {
	// Cargar panel derecho
	loadGrid();
	$( "#txtGridUpc").focus();
	// Captura cantidad de productos
	$(document).on('change', '.txtGridUpc', function (e) {
		console.log("Captura UPC");
		var upc = document.getElementById("txtGridUpc").value;
		$.ajax({
		  type:"GET",
		  dataType : 'json',
		  url: "api/v1/posproductos?upc=" + upc,
		  success: function(datos){
		  console.log("Producto", datos);
		  //jsonLineBuilder(datos);//
		  addProduct(datos);
		},
		  error:  function(){ 
		  	console.log("Ha ocurrido el error.");
		  }
		}); 	
		document.getElementById("txtGridUpc").value = "";	
	});	
	$(document).on('change', '.qtyGridVenta', function (e) {
		// cambia la cantidad del producto
		console.log("QTYP: ", e.currentTarget.id);
		actualizaLineaJSON(e.currentTarget.id);
		// Carga popUp de lotes
		calcularTotales();
		// Consultar lotes
		  $.ajax({
		          type:"GET",
		          dataType : 'json',
		          url: "api/v1/poslotes?producto_id=" + currentProduct,
		          success: function(datos){
		          console.log("Lotes", datos);
		          loadLotes(datos);
		      },
		          error:  function(){ 
		          	console.log("Error no gestionado");
		          }
		  });
	});
	$(document).on('click', '.loteSelected', function (e) {
		// Lote seleccionado
		console.log("Lote seleccionado: %)$=#", e);
		var exit = true;
		for (var i=0;i<jsonTicket.gridrows.length;i++) {
			// Validar que haya sido seleccinoado al menos un lote
			if (jsonTicket.gridrows[i].ProductoID == currentProduct) {
				if (jsonTicket.gridrows[i].Lotes.length <= 0) {
					exit = false;
					document.getElementById("panellotes").style.overflowY = "hidden";
					document.getElementById("alertInLote").innerHTML = buildAlertError("No has asignado los lotes", "Para continuar es necesario asignar los lotes correspondientes a este producto, recuerda que se asignarán sólo los lotes que esten marcados en la parte de abajo.");
				} else {
					// Validar que la cantidad de la linea sea igual a la suma de las cantidades de los lotes
					var qtyLotes = 0;
					for (var j=0;j<jsonTicket.gridrows[i].Lotes.length;j++) {
						qtyLotes = qtyLotes + parseFloat(jsonTicket.gridrows[i].Lotes[j].Cantidad);
					}	
					if (qtyLotes != parseFloat(jsonTicket.gridrows[i].Cantidad)) {
					exit = false;
					document.getElementById("alertInLote").innerHTML = buildAlertError("Las cantidades parecen no ser correctas", "Recuerda que no puedes asignar más cantidad a los lotes que la que asignaste en la línea, esta línea tiene asignada la cantidad de " + jsonTicket.gridrows[i].Cantidad + " por lo que es neceario que la suma de las cantidades asignadas a los lotes sumen  " + jsonTicket.gridrows[i].Cantidad + ".");					
					document.getElementById("panellotes").style.overflowY = "hidden";
					}
				}
			}
		}
		if (exit) {
			document.getElementById("allFrame").style.display = "none";
			$( "#txtGridUpc").focus();
			buildIndicadores();
		}
		console.log("JSON ORDER: ", jsonTicket);
	});	
	$(document).on('click', '.btn_total', function (e) {
		// cambia la cantidad del producto
		console.log("COMPLETAR-METODOS DE PAGO: ", e);
		//Mostrar teclado y ocultar el grid
		upKeyboard();
		//Actualizar barra (Esto no quedará aca)
		actualizaBarra(document.getElementById("btn_total").value);
		// Actualizar resto, el resto será el total de la venta
		restoVenta = ((document.getElementById("btn_total").value).replace("TOTAL $", "")).replace(",", "");
		jsonTicket.resto = restoVenta;
	});	
	$(document).on('click', '.divKeyKB', function (e) {
		//addMetodo(e.target.id);
		console.log("$> KEY: " + e.target.id);
		switch(e.target.id) {
			case "EFECTIVO": 
				addMetodo(e.target.id);
			break;
			case "VALE": 
				addMetodo(e.target.id);
			break;	
			case "TARJETA": 
				addMetodo(e.target.id);
			break;
			case "PUNTOS": 
				addMetodo(e.target.id);
			break;	
			case "X": 
				buildIndicadores();
			break;												
			default:
				console.log("No se encontró funcionalidad.");
		}
	});		
	$(document).on('change', '.qtyGridVentaMetodosack', function (e) {
		console.log("$> CHNG: ", e.currentTarget.id);
		addMontoMetodo(e.currentTarget.id);
	});	
	$(document).on('click', '.selectRowProducto', function (e) {
		//row.id = "rowVentaProducto_" + lon;
		console.log("E: ", e.target.id);
		var index = (e.target.id).split("_");
		validateColor = (document.getElementById("rowVentaProducto_" + index[1]).style.backgroundColor).toString();
		if (validateColor == "") {
			document.getElementById("rowVentaProducto_" + index[1]).style.backgroundColor = "#CEF6F5";
			//document.getElementById("tabAction").style.display = "table";
			if (jsonTicket.selectedrows.indexOf(index[1]) == -1) {
				jsonTicket.selectedrows.push(index[1]);
			}
			buildTab("G");
		} else {
			document.getElementById("rowVentaProducto_" + index[1]).style.backgroundColor = "";
			// Eliminar del json
			var newSelectedRows = [];
			for (var i=0;i<jsonTicket.selectedrows.length;i++) {
				if (jsonTicket.selectedrows[i] != index[1]) {
					newSelectedRows.push(jsonTicket.selectedrows[i]);
				}
			}
			jsonTicket.selectedrows = newSelectedRows;
			if (jsonTicket.selectedrows.length < 1) {
				//document.getElementById("tabAction").style.display = "none";
				buildTab("G");
			}			
		}
	});
	$(document).on('click', '.selectRowMetodo', function (e) {
		//row.id = "rowVentaProducto_" + lon;
		console.log("E>: ", e);
		var index = (e.currentTarget.id).split("_");
		validateColor = (document.getElementById("rowVentaMetodo_" + index[1]).style.backgroundColor).toString();
		if (validateColor == "") {
			document.getElementById("rowVentaMetodo_" + index[1]).style.backgroundColor = "#CEF6F5";
			//document.getElementById("tabActionMetodo").style.display = "table";
			if (jsonTicket.selectedmetodos.indexOf(index[1]) == -1) {
				jsonTicket.selectedmetodos.push(index[1]);
			}
			buildTab("P");
		} else {
			document.getElementById("rowVentaMetodo_" + index[1]).style.backgroundColor = "";
			console.log("VALIDA TICKET ", jsonTicket);
			// Eliminar del json
			var newSelectedMetodos = [];
			for (var i=0;i<jsonTicket.selectedmetodos.length;i++) {
				if (jsonTicket.selectedmetodos[i] != index[1]) {
					newSelectedMetodos.push(jsonTicket.selectedmetodos[i]);
				}
			}
			if (jsonTicket.selectedmetodos.length < 1) {
				//document.getElementById("tabActionMetodo").style.display = "none";
				buildTab("P");
			}			
			jsonTicket.selectedmetodos = newSelectedMetodos;
		}
	});
	$(document).on('click', '.deleteGrid', function (e) {
		// Eliminar de la orden (json)
		var newRows = [];
		for (var i=0;i<jsonTicket.gridrows.length;i++) {
			for (var j=0;j<jsonTicket.selectedrows.length;j++) {
				console.log("BORRAR: " + jsonTicket.selectedrows[j] + " - ENGRID: " + jsonTicket.gridrows[i].LineaID);
				if (jsonTicket.selectedrows[j] != jsonTicket.gridrows[i].LineaID) {
					console.log("$>>BORRALINEA");
					newRows.push(jsonTicket.gridrows[i]);
				}
			}
		}
		jsonTicket.gridrows = newRows;
		// Eliminar de la tabla
		for (var k=0;k<jsonTicket.selectedrows.length;k++) {
			var row = document.getElementById("rowVentaProducto_" + jsonTicket.selectedrows[k]);
    		row.parentNode.removeChild(row);
		}
		jsonTicket.selectedrows = [];
		document.getElementById("tabActionMetodo").style.display = "none";
		buildTab("H");
		calcularTotales();
	});
	$(document).on('click', '.deleteGridMetodo', function (e) {
		// Eliminar de la orden (json)
		var auxMetodo = 0;
		var newMetodos = [];
		for (var i = 0;i<jsonTicket.metodospago.length;i++) {
			var index = jsonTicket.metodospago[i].LineaID.split("_");
			if (jsonTicket.selectedmetodos.indexOf(index[1]) > -1) {
				auxMetodo = auxMetodo + parseFloat(jsonTicket.metodospago[i].Monto);
			} else {
				newMetodos.push(jsonTicket.metodospago[i]);
			}
		}
		jsonTicket.resto = jsonTicket.resto + auxMetodo;
		jsonTicket.metodospago = newMetodos;
		jsonTicket.resto = jsonTicket.resto + auxMetodo;
		// Eliminar de la tabla
		for (var k=0;k<jsonTicket.selectedmetodos.length;k++) {
			
			var row = document.getElementById("rowVentaMetodo_" + jsonTicket.selectedmetodos[k]);
    		row.parentNode.removeChild(row);
		}
		
		jsonTicket.selectedmetodos = [];
		document.getElementById("tabActionMetodo").style.display = "none";
		buildTab("H");
		calcularTotales();
		calculaResto();
		if (jsonTicket.metodospago.length <= 0) {
			document.getElementById("gridVenta").style.display = "table";
			document.getElementById("gridVentaMetodos").style.display = "none";					
		}
	});	
	$(document).on('click', '.gridView', function (e) {
		var check = document.getElementById("gridVenta").style.display;		
		if (check != "none") {
			document.getElementById("gridVenta").style.display = "none";
			document.getElementById("gridVentaMetodos").style.display = "table";
			buildTab("P");
		} else {
			document.getElementById("gridVenta").style.display = "table";
			document.getElementById("gridVentaMetodos").style.display = "none";		
			buildTab("G");
		}
	});
	$(document).on('click', '.tdRowLote', function (e) {
		// GRID DE LOTES
		var loteNum = e.target.id.split("_")[1];
		var qtyLote = document.getElementById("txtLote_" + loteNum).value;
		console.log("$> Lote :" + loteNum + " - Qty: " + qtyLote);
		validateColor = (document.getElementById("tdRowLote_" + loteNum).style.backgroundColor).toString();
		if (validateColor == "") {
			// Colorear linea
			document.getElementById("tdRowLote_" + loteNum).style.backgroundColor = "#CEF6F5";
			// Ingresar linea en json
			var lote = {};	
			lote.ProductID = currentProduct;
			lote.Lote = loteNum;
			lote.Cantidad = qtyLote;
			for (var i=0;i<jsonTicket.gridrows.length;i++) {
				if (jsonTicket.gridrows[i].ProductoID == currentProduct) {
					if (jsonTicket.gridrows[i].Lotes.indexOf(lote) == -1) {
						jsonTicket.gridrows[i].Lotes.push(lote);
					}
				}
			}
		} else {
			// quitar color a linea
			document.getElementById("tdRowLote_" + loteNum).style.backgroundColor = "";
			// sacar del json
			var newLotes = [];
			for (var j=0;j<jsonTicket.gridrows.length;j++) {
				if (jsonTicket.gridrows[j].ProductoID == currentProduct) {
					for (var k=0;k<jsonTicket.gridrows[j].Lotes.length;k++) {
						if (jsonTicket.gridrows[j].Lotes[k].Lote != loteNum) {
							newLotes.push(jsonTicket.gridrows[j].Lotes[k]);
						}

					}
				jsonTicket.gridrows[j].Lotes = newLotes;
				}
			}			
		}
	});
	$(document).on('change', '.txtlote_qty', function (e) {
		console.log("E: ",  e);
		var loteNum = e.target.id.split("_")[1];
		var qtyLote = document.getElementById("txtLote_" + loteNum).value;
		for (var j=0;j<jsonTicket.gridrows.length;j++) {
			if (jsonTicket.gridrows[j].ProductoID == currentProduct) {
				for (var k=0;k<jsonTicket.gridrows[j].Lotes.length;k++) {
					if (jsonTicket.gridrows[j].Lotes[k].Lote != loteNum) {
						jsonTicket.gridrows[j].Lotes[k].Cantidad = qtyLote;
					}

				}
			}
		}					
	});
	$(document).on('click', '.totalCubierto', function (e) {
		// cosas escritas
		console.log("Venta Terminada", jsonTicket);
		// meter el jsonTicket a un json de cierre de caja 
		// limpiar la pantalla
		limpiaPantalla();
	});
	$(document).on('click', '.btnAlert', function (e) {
		document.getElementById("alert").style.display = "none";
		document.getElementById("panellotes").style.overflowY = "scroll";
	});
});
/*************************************** FUNCIONES *************************************************************************/
function loadGrid() {
	var table = '<table id="gridVenta" class="gridVenta"></table>';
	//table += '<table id="gridVentaMetodos" class="gridVenta" style="display:none;"></table>';
	table += '<table id="gridVentaMetodos" class="gridVenta" style="border:0px solid black;"></table>';
	document.getElementById("divGridVenta").innerHTML = table;
	buildIndicadores();
}
function loadLotes(json) {
	console.log("$json: ", json);
	var jsonRows = json.response.data;
	document.getElementById("allFrame").style.display = "block";
	var table = '<div id="alertInLote" width="100%"></div>';
	table += "<h3>Lotes</h3>";
	table += '<table width="90%"><tr><td width="85%" class="tdHeadLote">Lote</td><td align="left" width="15%" class="tdHeadLote">Cantidad</td><td width="10%" class="tdHeadLote"></td></tr></table>';	
	table += '<div style="width:100%;height:60%;overflow-y:scroll;" id="panellotes"><table width="90%">';
	for (var i=0;i<jsonRows.length;i++) {
		if (jsonRows[i].qtyonhand > 0) {
			//var lote = Math.floor((Math.random() * 1000000) + 1)*Math.floor((Math.random() * 1000000) + 1);
			if (i%2 == 0) {
				var style = 'style="background-color:white;color:black"';
			} else {
				var style = 'style="background-color:#3498db;color:black"';
			}
			table += '<tr  id="tdRowLote_' + jsonRows[i].lot + '"><td width="85%" id="tdlot_' +  jsonRows[i].lot  +'" class="tdRowLote"><div id="tdqty_' +  jsonRows[i].lot  +'" style="height:100%;width:100%">' + jsonRows[i].lot + ' / ' + jsonRows[i].guaranteedate + '</div></td><td width="15%" class="tdRowLote" id="tdqty_' +  jsonRows[i].lot  +'"><input type="text" class="txtlote_qty" id="txtLote_' +  jsonRows[i].lot  +'" value="' + jsonRows[i].qtyonhand + '"/></td></tr>';
		}
	}
	table += '</table></div>';
	table += '<td align="right"><input type="button" class="btnLote loteSelected" value="listo"/></td>';
	document.getElementById("listadoLotes").innerHTML = table;
}
function addProduct(json) {
	var jsonObject = json.response;
 	var jsonRows = allPrice.rows;
 	var lon = document.getElementById("gridVenta").rows.length;
 	var check = document.getElementById("gridVenta").style.display;		
	if (check == "none") {
		document.getElementById("gridVenta").style.display = "table";
		document.getElementById("gridVentaMetodos").style.display = "none";
	}
 	// si ya existe un row con indice lon entonces lon valdra lon++
 	var exist = document.getElementById("rowVentaProducto_" + lon);
 	if (document.getElementById("rowVentaProducto_" + lon) != null) {
 		lon++;
 	}
	// Guardar los datos en el json
	var linea = {};
	linea.LineaID			= lon;
	linea.ProductoID 		= jsonObject.data[0].id;
	currentProduct			= jsonObject.data[0].id;
	linea.Producto 			= jsonObject.data[0].name;
	linea.Clave				= jsonObject.data[0].value;
	linea.Precio 			= 0;
	linea.Impuesto 			= 0;
	linea.Total 			= 0;
	linea.totalImpuestos	= 0;
	linea.Cantidad			= 0;
	linea.Inventario		= jsonObject.data[0].inventario;
	linea.Familia			= jsonObject.data[0].familia;
	linea.Marca				= jsonObject.data[0].marca;
	linea.Categoria			= jsonObject.data[0].categoria;
	linea.Caracteristicas	= jsonObject.data[0].caracteristicas;
	linea.Lotes 			= [];
	for (var key in jsonRows) {
		var obj = jsonRows[key]; 
		if (obj.Producto_ID == linea.ProductoID) {
		    linea.Precio = (parseFloat(obj.Precio)+parseFloat(obj.Impuesto)).toFixed(2);
		    linea.Impuesto = obj.Impuesto;
		}
		/*	GESTION DE PRODUCTOS EXTRA PRECIOS
		if (obj.Producto_ID == jsonObject.data[i].productextra) {
		  linea.Precioproductoextra = (parseFloat(obj.Precio)+parseFloat(obj.Impuesto)).toFixed(2);
		  linea.Impuestoproductoextra = obj.Impuesto;
		}*/
	}
	console.log("INVENTARIO: " + parseFloat(linea.Inventario.replace(" Piezas", "")) + "???");
	if (parseFloat(linea.Inventario.replace(" Piezas", "")) > 0) {
		jsonTicket.gridrows.push(linea);
		var table = document.getElementById("gridVenta");
		var row = table.insertRow(lon);
		row.id = "rowVentaProducto_" + lon;
		row.className = "selectRowProducto";
		var cell1 = row.insertCell(0);
		var cell2 = row.insertCell(1);
		var cell3 = row.insertCell(2);
		var cell4 = row.insertCell(3);
		cell1.innerHTML = linea.Producto;
		cell2.innerHTML = separaMiles(linea.Precio);	
		cell3.innerHTML = '<input type="text" id="qtyGridVenta_' + lon + '" class="qtyGridVenta" value=""/>';
		cell4.innerHTML = "0.00";
		// enfocar el campo de cantidad
		$( "#qtyGridVenta_" + lon).focus();
		upKeyboard();
		// Display
		cell1.className = "rowGridVenta";
		cell1.id = "cel1_" + lon;
		cell2.className = "rowGridVenta";
		cell2.id = "cel2_" + lon;;
		cell3.className = "rowGridVenta";
		cell3.id = "cel3_" + lon;;
		cell4.className = "rowGridVenta";
		cell4.id = "cel4_" + lon;		

	} else {
		popAlert("No hay inventario", "No hay existencias registradas para este producto por lo tanto no puede ser vendido, valida el inventario e intentalo nuevamente.", "entendido");
	}	
}
function upKeyboard() {
	console.log("Meto: ", jsonMetodos);
	var table = '<br><br><br><table class="tabKeyBoard" align="center" width="90%" height="80%">';
	table += '<tr><td width="20%"><div id="EFECTIVO" class="divKeyKB">' + jsonMetodos[0].Name + '</div></td><td width="20%"><div class="divKeyKB">7</div></td><td width="20%"><div class="divKeyKB">8</div></td><td width="20%"><div class="divKeyKB">9</div></td><td width="20%"><div  id="X" class="divKeyKB">x</div></td></tr>';
	table += '<tr><td width="20%"><div  id="VALE" class="divKeyKB">' + jsonMetodos[1].Name + '</div></td><td width="20%"><div class="divKeyKB">4</div></td><td width="20%"><div class="divKeyKB">5</div></td><td width="20%"><div class="divKeyKB">6</div></td><td rowspan="3"width="20%"><div class="divKeyKB">Ok</div></td></tr>';
	table += '<tr><td width="20%"><div  id="TARJETA" class="divKeyKB">' + jsonMetodos[2].Name + '</div></td><td width="20%"><div class="divKeyKB">1</div></td><td width="20%"><div class="divKeyKB">2</div></td><td width="20%"><div class="divKeyKB">3</div></td></tr>';
	table += '<tr><td width="20%"><div  id="PUNTOS" class="divKeyKB">Puntos</div></td><td width="20%"><div class="divKeyKB">.</div></td><td width="20%"><div class="divKeyKB">0</div></td><td width="20%"><div class="divKeyKB"><</div></td></tr>';
	table += "</table>";
	paintLeftPanel(table);
}
function paintLeftPanel(html) {
	// Imprimir printleftpanel
	document.getElementById("leftFrame").innerHTML = html;
}
function buildIndicadores() {
	html = '<div align="center" width="100%"><table width="100%" align="center">';
	// Indicador Uno
	html += '<tr><td class="tdIndicadores" id="indicadorUno" style="float:left;width:30%;height:15em;"><table width="100%"><tr><td class="tdIndicadoresHeader">Objetivo de ventas</td></td><tr><td class="tdIndicadoresValor">$1,549,989.09</td></tr></table></td>';
	// Indicador Dos	
	html += '<td  class="tdIndicadores" id="indicadorDos" style="float:left;width:30%;height:15em;"><table width="100%"><tr><td class="tdIndicadoresHeader">Ventas por mes</td></td><tr><td class="tdIndicadoresValor">$49,989.09</td></tr></table></td>';
	// Indicador Tres	
	html += '<td class="tdIndicadores" id="indicadorTres" style="float:left;width:30%;height:15em;"><table width="100%"><tr><td class="tdIndicadoresHeader">Efectivo en caja</td></td><tr><td class="tdIndicadoresValor">$989.09</td></tr></table></td></tr>';
	// Grafica
	html += '<tr><td class="tdIndicadores" id="indicadorGrafica" style="float:left;width:63%;height:23em;"></td>';
	// extra
	html += '<td class="tdIndicadores" id="indicadorExtra" style="float:left;width:30%;height:23em;"><table width="100%">';
	html +='<tr><td colspan="2" class="tdExtraValor">Promociones Vigentes</td></tr>';
	for (var i=1;i<4;i++) {
		html +='<tr><td  class="tdExtraImg" width="10%"><img src="/oferta.png" width="100%"/></td><td class="tdExtraValor">' + i +'% En toda la tienda</td></tr><tr><td class="tdExtraDescripcion" colspan="2">Vigencia al ' +  i + ' de diciembre de 2015</td></tr>';
	}
	html += '</table></td></tr>';
	html += "</table></div>";
	paintLeftPanel(html);
}
function calcularTotales() {
	//var tab = document.getElementById("myTable").rows[0].cells.length;
	var rows = document.getElementById("gridVenta").rows;
	var total = 0;
	for (var i =0;i<rows.length;i++) {
		var indx = i + 1;
		precio = parseFloat((rows[i].cells[1].innerHTML).replace(",", ""))*parseFloat(document.getElementById("qtyGridVenta_" + i).value);
		rows[i].cells[3].innerHTML = separaMilesPOS((precio.toFixed(2)).toString());
		total = total + precio;
	}
	total = total.toFixed(2);
	impuestos = (total*.16).toFixed(2);
	// calculo en JSON
	jsonTotal = 0;
	jsonImpuestos = 0;
	for (var j=0;j<jsonTicket.gridrows.length;j++) {
		console.log("$> Entra>> " + parseFloat(jsonTicket.gridrows[j].Total));
		jsonTotal = jsonTotal + parseFloat(jsonTicket.gridrows[j].Total);
		jsonImpuestos = jsonImpuestos + parseFloat(jsonTicket.gridrows[j].totalImpuestos);
	}
	// Actualizar orden - json
	jsonTicket.total = jsonTotal;
	jsonTicket.impuestos = jsonImpuestos;
	calculaResto();
	// Actializa pantalla

	console.log("Calculo json: " + jsonTotal);
	document.getElementById("btn_total").value = "TOTAL $" + separaMilesPOS(jsonTotal.toString());
	document.getElementById("tdImpuestosVenta").innerHTML = "$" + separaMilesPOS(jsonImpuestos.toFixed(2).toString());
}
function calculaResto() {
	var descontar = 0;
	for (var i=0;i<jsonTicket.metodospago.length;i++) {
		descontar = descontar + parseFloat(jsonTicket.metodospago[i].Monto);
	}
	jsonTicket.resto = jsonTicket.total - descontar;
	calculaCambio();
}
function calculaCambio() {
	var pagado = 0;
	for (var i=0;i<jsonTicket.metodospago.length;i++) {
		pagado = pagado + parseFloat(jsonTicket.metodospago[i].Monto);
	}
	if(pagado > jsonTicket.total) {
		jsonTicket.cambio = pagado - jsonTicket.total;
	}
	document.getElementById("tdCambioVenta").innerHTML = "$" + separaMilesPOS(jsonTicket.cambio.toFixed(2).toString());
	jsonTicket.resto = jsonTicket.resto + jsonTicket.cambio;
}
function actualizaBarra(monto) {
	/*<div id="menuBar" style="width:100%;background-color:white;height:40em">&nbsp;</div>
	<div id="emptyBar" style="width:100%;background-color:white;height:4em"><p>0%</p></div> <-- este no se mueve por que tiene el %
	<div id="fullBar" style="width:100%;background-color:orange;height:1em">&nbsp;</div>*/
	var mbh = (document.getElementById("menuBar").style.height).replace("em", "");
	var ebh = (document.getElementById("emptyBar").style.height).replace("em", "");
	var fbh = (document.getElementById("fullBar").style.height).replace("em", "");
	var nuevo = monto.replace("TOTAL $", "");
	nuevo = nuevo.replace(",", "");
	lenTotal = parseFloat(mbh) + parseFloat(fbh);
	index = lenTotal/metaVentas;
	plus = index*nuevo;
	console.log("PLUS: " + plus);
	if (plus > 0.1) {
		var newfbh = parseFloat(fbh) + plus;
		var newmbh = parseFloat(mbh) - plus;
		document.getElementById("fullBar").style.height = newfbh + "em";
		document.getElementById("menuBar").style.height = newmbh + "em";
		var newPercent = ((newfbh/lenTotal)*100).toFixed(2);
		document.getElementById("emptyBar").innerHTML = "<p>" + newPercent + "%</p>";		
	}
}
function separaMilesPOS(numero){ 
    // Variable que contendra el resultado final
    var resultado = "";
    
    // Si el numero empieza por el valor "-" (numero negativo)
    if(numero[0]=="-")
    {
        // Cogemos el numero eliminando los posibles puntos que tenga, y sin
        // el signo negativo
        nuevoNumero=numero.replace(/\,/g,'').substring(1);
    }else{
        // Cogemos el numero eliminando los posibles puntos que tenga
        nuevoNumero=numero.replace(/\,/g,'');
    }
    
    // Si tiene decimales, se los quitamos al numero
    if(numero.indexOf(".")>=0)
        nuevoNumero=nuevoNumero.substring(0,nuevoNumero.indexOf("."));

    // Ponemos un punto cada 3 caracteres
    for (var j, i = nuevoNumero.length - 1, j = 0; i >= 0; i--, j++) 
        resultado = nuevoNumero.charAt(i) + ((j > 0) && (j % 3 == 0)? ",": "") + resultado; 
    
    // Si tiene decimales, se lo añadimos al numero una vez forateado con 
    // los separadores de miles
    if(numero.indexOf(".")>=0)
        resultado+=numero.substring(numero.indexOf("."), numero.indexOf(".")+3);

    if(numero[0]=="-")
    {
        // Devolvemos el valor añadiendo al inicio el signo negativo
        return "-"+resultado;
    }else{
        return resultado;
    }
}
function addMetodo(metodo) {
	var metodoExiste = false;
	for (var i = 0;i<jsonTicket.metodospago.length;i++) {
		if (metodo == jsonTicket.metodospago[i].Metodo) {
			metodoExiste = true;
		}
	}
	if (!metodoExiste && jsonTicket.resto != 0) {
		document.getElementById("gridVenta").style.display = "none";
		document.getElementById("gridVentaMetodos").style.display = "table";
		var table = document.getElementById("gridVentaMetodos");
		var lon = document.getElementById("gridVentaMetodos").rows.length;
		var row = table.insertRow(lon);
		 	// si ya existe un row con indice lon entonces lon valdra lon++
		var exist = document.getElementById("rowVentaMetodos_" + lon);
		if (document.getElementById("rowVentaMetodos_" + lon) != null) {
			lon++;
		}
		row.id = "rowVentaMetodo_" + lon;
		row.className = "selectRowMetodo";		
		var cell1 = row.insertCell(0);
		var cell2 = row.insertCell(1);
		var metodolinea = {};
		cell1.innerHTML = metodo;
		cell1.className = "rowGridMetodos";
		cell2.className = "rowGridMetodos";
		cell1.style.width = "80%";
		cell2.style.width = "20%";
		// Añadir metodos a la orden
		metodolinea.LineaID = "qtyGridVentaMetodos_" + lon;
		metodolinea.Monto = parseFloat(jsonTicket.resto);
		metodolinea.Metodo = metodo;
		jsonTicket.metodospago.push(metodolinea);
		cell2.innerHTML = '<input type="text" onfocus="this.select();" id="qtyGridVentaMetodos_' + lon + '" class="qtyGridVentaMetodosack" value="' + jsonTicket.resto +'"/>';
		$( "#qtyGridVentaMetodos_" + lon).focus();
		calculaResto();
		document.getElementById('btn_total').className = "totalCubierto";
		document.getElementById("btn_total").value = "Listo!";
		document.getElementById("btn_total").style.align = "center";		
	}
	console.log("$>T ", jsonTicket);
}
function addMontoMetodo(id) {
	newMonto = document.getElementById(id).value;
	/*restoVenta = parseFloat(restoVenta) - parseFloat(newMonto);
	jsonTicket.resto = restoVenta;*/
	// modificar el metodo de pago en el json
	for (var i=0;i<jsonTicket.metodospago.length;i++) {
		console.log("COMPARA: id: " + id + " - lineaid: " + jsonTicket.metodospago[i].LineaID);
		if (jsonTicket.metodospago[i].LineaID == id) {
			jsonTicket.metodospago[i].Monto = newMonto;
		}
	}	
	calculaResto();
	if (jsonTicket.resto <= 0) {
		document.getElementById('btn_total').className = "totalCubierto";
		document.getElementById("btn_total").value = "Listo!";		
	} else {
		document.getElementById('btn_total').className = "btn_total";
		document.getElementById("btn_total").value = "TOTAL $" + separaMilesPOS(jsonTicket.total.toString());			
	}
	console.log("$>T ", jsonTicket);
}
function actualizaLineaJSON(id) {
	console.log("TICKET: ", jsonTicket);
	var idArray = id.split("_");
	var lineaID = idArray[1];
	var nuevoValor = document.getElementById(id).value;
	console.log("$> Actualiza la linea " + lineaID + " con el valor: " + nuevoValor + " LNGHT: " + jsonTicket.gridrows.length);
	for (var i=0;i<jsonTicket.gridrows.length;i++) {
		console.log("LINEA: " + jsonTicket.gridrows[i].LineaID)
		if (jsonTicket.gridrows[i].LineaID == lineaID) {
			jsonTicket.gridrows[i].Cantidad = nuevoValor;
			jsonTicket.gridrows[i].Total = parseFloat(jsonTicket.gridrows[i].Cantidad)*parseFloat(jsonTicket.gridrows[i].Precio);
			jsonTicket.gridrows[i].totalImpuestos = parseFloat(jsonTicket.gridrows[i].Cantidad)*parseFloat(jsonTicket.gridrows[i].Impuesto);
		}
	}
}
function asignarLotes(lotes) {
	var lote = {};
	for (var i=0;i<lotes.length;i++) {
		loteProperties = lotes[i].split("_");
		lote.ProductID = currentProduct;
		lote.Lote = loteProperties[1];
		lote.Cantidad = loteProperties[0];
		for (var j=0;j<jsonTicket.gridrows.length;j++) {
			if (jsonTicket.gridrows[j].ProductoID == currentProduct) {
				jsonTicket.gridrows[j].Lotes.push(lote);
			}
		}
		lote = {};
	}
}
function showOptions(param) {
	if (param == "G") {
		document.getElementById("tabAction").style.display = "table";
		// Validar si hay metodos de pago para desplegar la opción
		if (jsonTicket.metodospago.length > 0) {
			document.getElementById("act_switch").style.display = "table";
		} else {
			document.getElementById("act_switch").style.display = "none";
		}
	}
	if (param == "P") {
		document.getElementById("tabActionMetodo").style.display = "table";
		// Validar si hay metodos de pago para desplegar la opción
		if (jsonTicket.metodospago.length > 0) {
			document.getElementById("met_switch").style.display = "table";
		} else {
			document.getElementById("met_switch").style.display = "none";
		}
	}	
}
function buildTab(op) {
	/* op:
		H: Ocultar tab
		G: Mostrar opciones para productos seleccionados
		P: Mostrar opciones para metodos de pago
	*/
	console.log("$> BUILDTAB: " + op);
	if (op == "H") {
		document.getElementById("tabOptions").style.display = "none";
	} else {
		document.getElementById("tabOptions").style.display = "table";
		if (op == "G") {
			// Eliminar lineas de producto
			// Limpiar tds
			document.getElementById("tab_op1").innerHTML = "";
			document.getElementById("tab_op2").innerHTML = "";
			document.getElementById("tab_op3").innerHTML = "";
			document.getElementById("tab_op4").innerHTML = "";
			if (jsonTicket.selectedrows.length) {
				// Pintar opción borrar
				document.getElementById("tab_op1").innerHTML = "Eliminar";
				document.getElementById("tab_op1").className = "gridVentaOpciones deleteGrid";
				// Cambiar lotes asignados a la línea
				document.getElementById("tab_op3").innerHTML = "Lotes";
				document.getElementById("tab_op3").className = "gridVentaOpciones";				
			}
			// Si hay metodos de pago mostrar el switch
			if (jsonTicket.metodospago.length > 0) {
				document.getElementById("tab_op2").innerHTML = "Pagos";
				document.getElementById("tab_op2").className = "gridVentaOpciones gridView";				
			}
		}
		if (op == "P") {
			// Limpiar tds
			document.getElementById("tab_op1").innerHTML = "";
			document.getElementById("tab_op2").innerHTML = "";
			document.getElementById("tab_op3").innerHTML = "";
			document.getElementById("tab_op4").innerHTML = "";			
			// Eliminar lineas de metodos de pago
			if (jsonTicket.selectedmetodos.length > 0) {
				document.getElementById("tab_op1").innerHTML = "Eliminar";
				document.getElementById("tab_op1").className = "gridVentaOpciones deleteGridMetodo";
			}
			// Switch a lista de productos
			document.getElementById("tab_op2").innerHTML = "Líneas";
			document.getElementById("tab_op2").className = "gridVentaOpciones gridView";							
		}		
	}
}
function popAlert(title, mensaje, boton) {
	document.getElementById("alert").style.display = "block";
	html = "<h1>" + title + "</h1>"
	html += "<p>" + mensaje + "</p>"
	html += '<div alignt="center"><input type="button" class="btnAlert" value="' + boton + '"/><div>';
	document.getElementById("frameAlert").innerHTML = html;
}
function buildAlertWarning(titulo, mensaje){
	// Amarillo
  	return '<div id="alert_limite" class="alert alert-warning alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4>' + titulo + '</h4><p>' + mensaje + '</p></div>';
}
function buildAlertError(titulo, mensaje){
	// Rojo
 	return '<div id="alert_limite" class="alert alert-danger alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4>' + titulo + '</h4><p>' + mensaje + '</p></div>';
}
function buildAlertSuccess(titulo, mensaje){
	// Verde
 	return '<div id="alert_limite" class="alert alert-success alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4>' + titulo + '</h4><p>' + mensaje + '</p></div>';
}
function limpiaPantalla() {
	jsonTicket.total = 0;
	jsonTicket.impuestos = 0;
	jsonTicket.resto = 0;
	jsonTicket.cambio = 0;
	jsonTicket.selectedrows = [];
	jsonTotal.selectedmetodos = [];
	jsonTicket.gridrows = [];
	jsonTicket.metodospago = [];
	document.getElementById("btn_total").className = "btn_total";
	calcularTotales();
	calculaResto();
	calculaCambio();
	loadGrid();
	buildTab("H");
	$( "#txtGridUpc").focus();
}
</script>
<script>
$(function() {
 console.log("$> Al entrar se cargara la lista de precios venta en piso.");
  var datox = {};
  $.ajax({
          type:"GET",
          dataType : 'json',
          url: "api/v1/precios",
          success: function(datos){
          console.log("Precios", datos);
          allPrice = jsonConstructorPrice(datos);
          // Metodos de pago
			$.ajax({
				type:"GET",
				dataType : 'json',
				url: "api/v1/metodopagos",
				success: function(datoz){
				buildMetodosPago(datoz);
			},
			error:  function(){ 
				console.log("Error no gestionado");
			}
			});         
      },
          error:  function(){ 
          var mensajeError = '<br><br><br><div align="center"><h1>Ups!! algo ha salido mal.</h1><h3>No ha sido posible entablar comunicación, por favor comuniquese con su proveedor [Pricing].</h3></div>'
            document.getElementById("cat_pro").innerHTML = mensajeError;
          }
  });	

	$( '#dl-menu' ).dlmenu({
		animationClasses : { classin : 'dl-animate-in-2', classout : 'dl-animate-out-2' }
	});
	// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
	if (!String.prototype.trim) {
		(function() {
			// Make sure we trim BOM and NBSP
			var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
			String.prototype.trim = function() {
				return this.replace(rtrim, '');
			};
		})();
	}

	[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
		// in case the input is already filled..
		if( inputEl.value.trim() !== '' ) {
			classie.add( inputEl.parentNode, 'input--filled' );
		}

		// events:
		inputEl.addEventListener( 'focus', onInputFocus );
		inputEl.addEventListener( 'blur', onInputBlur );
	} );

	function onInputFocus( ev ) {
		classie.add( ev.target.parentNode, 'input--filled' );
	}

	function onInputBlur( ev ) {
		if( ev.target.value.trim() === '' ) {
			classie.remove( ev.target.parentNode, 'input--filled' );
		}
	}	
});
// FUNCIONES
function jsonConstructorPrice(json) {
//name, value, familia, descargaimg, id
  var rows = [];
  var jsonObject = json.response;
  for (var i=0;i<jsonObject.totalRows;i++) {
    //console.log("$> LINEA: ", jsonObject.data[i].impuesto);
      var row = {};
      row.Producto_ID = jsonObject.data[i].product;
      row.Impuesto = (jsonObject.data[i].impuesto).toFixed(2);
      row.Precio = (jsonObject.data[i].pricelista).toFixed(2);
      rows.push(row);
  } 
  // Definir columnas
  var cols = {
      Nombre: {
          index: 1,
          type: "string",
          friendly: "Nombre"
      },
      Identificador: {
          index: 2,
          type: "string",
          friendly: "Identificador"
      },
      /*Familia: {
          index: 3,
          type: "string",
          friendly: "Familia"
      },*/
      DescargaImg: {
          index: 4,
          type: "string",
          hidden: true
      },
      Producto_ID: {
          index: 5,
          type: "string",
          id: true,
          hidden: true
      }
  };
  // Contruir el json de datos
  var data = {
              cols: cols,
              rows: rows
          };
  console.log("$> Termina Construcción Precios");              
  return data;
}  // Termina json Constructor
function buildMetodosPago(json) {
    var jsonObject = json.response;
    metodos = [];
    metodo = {};
    for (var i=0;i<jsonObject.totalRows;i++) {
    	metodo.Name = jsonObject.data[i].name;
    	metodo.MetodoID = jsonObject.data[i].id;
    	metodos.push(metodo);
    	metodo = {};
    }
    jsonMetodos = metodos;
}
</script>
</html>