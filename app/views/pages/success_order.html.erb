<!DOCTYPE html>
<html>
<head>
    <title>SCSORD</title>
<style>
    #loader-wrapper {
      background-color:white;
      position: fixed;
      top: 100;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 20;
    }  
    #loader-wrapper img {
      display: block;
      margin-top: 100px;
      margin-left: auto;
      margin-right: auto;
    } 
    .headRow {
        color:#585858;
        font-weight: bold;
        font-size: 110%;
        padding: 1% 1% 1% 1%;
    }
    .headRow h2 {
        display: inline;
        margin:0;
    }
    .lineGrid {
        width: 100%;
        height: 100%;
        border: 0px solid red;
        padding: 1% 1% 1% 1%;
    }
    .imgGrid {
        width: 20%;
        height: 60px;
        border: 0px solid black;
        border-bottom: 1px solid #E6E6E6;
    }
    .nameGrid {
        width: 30%;
        height: 60px;
        border: 0px solid red;
        padding: 1% 1% 1% 1%;
        font-size: 150%;
        font-weight: bold;
        border-bottom: 1px solid #E6E6E6;
    }
    .priceGrid {
        width: 20%;
        height: 60px;
        border: 0px solid black;
        padding: 1% 1% 1% 1%;
        color: black;
        border-bottom: 1px solid #E6E6E6;
    }
    .qtyGrid {
        width: 10%;
        height: 60px;
        border: 0px solid red;
        padding: .5% 0% 1% 0%;
        color: black;
        border-bottom: 1px solid #E6E6E6;
    }
    .qtyGrid input[type=text] {
        width: 50%;
        text-align:center;
    }
    .totalGrid {
        width: 20%;
        height: 60px;
        border: 0px solid black;
        padding: 1% 1% 1% 1%;
        font-size: 130%;
        font-weight: bold;
        border-bottom: 1px solid #E6E6E6;
    } 
    .netQty {
        padding: 2% 3% 0% 4%;
        font-size: 110%;
        font-weight: bold;
    }   
    .netTotal {
        padding-top: 2%;
    }
    .subtotal {
        padding: 0% 10% 0% 0%;
        font-size: 130%;
        font-weight: bold;
    }
    .impuestos {
        padding: 5% 10% 5% 0%;
        font-size: 120%;
        border-radius: 1px solid grey;
    }
    .total {
        padding: 0% 10% 0% 0%;
        font-size: 160%;
        font-weight: bold;
    }
    .totalGrid a{
        font-weight: normal;    
        font-size: 80%;
    }
    .btn-sbmt {
        width: 20%;
        border-radius: 5px;
        padding: 1% 0% 1% 0%;
    }
    .headOrden {
        font-weight: bold;
        font-size: 150%;
        padding-bottom: 1em;
    }
    .rowOrden {
        font-weight: bold;
        font-size: 130%;
        color: #7f8c8d;
    }
</style>
</head>
<body>
<br><br><br><br><br><br><br>
<div id="alerta_orden"></div>
<div align="center" id="div_message"></div>
<div id="loader-wrapper"><img src="load.gif" height="9%" width="6%"></img></div><!--Termina load-->
</body>
<!-- /api/v1/pedidosobs -->
<script type="text/javascript">
	$( document ).ready(function() {
        // ROLES
        <% if current_usuario.role != "Cliente" %>
        console.log("RESTRICTED");
        document.getElementById("loader-wrapper").remove(); 
        window.location.href="/unauthorized"
        <% end %>
        // ROLES        
        console.log( "ORDER SUCCESS ESPECIFICO EN EL LOG" );
	    var pedido = "<%= params[:pedido_id]%>";
	    var Orden = orderContructor();
        var openbravo = {};
        var pedidoCompletadoHTML = "";
	    if (pedido!="") {
	    	console.log("Existe el parametro de pedido, ejecutar servicio");
            // Servicio            
            // ESCRIBIR PEDIDO
            $.ajax({
                type:"GET",
                dataType : 'html',
                url: "api/v1/escribepedidos?pedido_id=" + pedido,
                   success: function(datox){
                    // PINTA PEDIDOS INCLUIDO EL ULTIMO QUE SE ACABA DE ESCRIBIR
                    console.log("SUCCESS ESCRIBE PEDIDO:");
                    if (datox == "OK") {
                        $.ajax({
                            type:"GET",
                            dataType : 'json',
                            url: "api/v1/pedidosobs",
                            success: function(datoz){
                                console.log("%> SUCCESS ESCRIBE" + datoz);
                                document.getElementById("div_message").innerHTML = "<h2>Tú Pedido se completó correctamente.</h2></div><br><br><br><br><a href=\"/catalogoproductos\">Cátalogo de productos.</a>";
                                openbravo = orderOpenBravo(datoz);
                                // Pintar Ordenes
                                htmlOrd = buildListaOrden(openbravo, Orden, pedido);
                                buildListaOrdenes(openbravo, Orden, pedido, htmlOrd);
                                document.getElementById("loader-wrapper").style.display = "none";
                                // BORRAR LINEAS DEL PEDIDO
                                $.ajax({
                                    type:"GET",
                                    dataType : 'json',
                                    url: "api/v1/borrarlineas?pedido_id=" + pedido,
                                    success: function(datox){
                                    console.log("$> Ocurrio un error"); 
                                    },
                                    error:  function(){ 
                                    console.log("$> Ocurrio un error");
                                    }
                                });                            
                            },
                            error:  function(){ 
                            console.log("$> Ocurrio un error");
                            document.getElementById("div_message").innerHTML = "<h2>Tu Pedido se completó correctamente pero no se han podido obtener tus pedidos, contacta con tu proveedor.</h2></div><br><br><br><br><a href=\"/carrito\">Carrito de Compra.</a>";
                            }
                            });
                    } else {
                        buildError(datox);
                    }
                    },
                    error:  function(datox){ 
                    console.log("$> Ocurrio un error", datox);
                    document.getElementById("loader-wrapper").style.display = "none";
                    document.getElementById("div_message").innerHTML = "<br><br><br><h2>Ha ocurrido un error de comunicación, vuelve a intentarlo más tarde.</h2></div><br><br><br><br><a href=\"/carrito\">Carrito de Compra.</a>";
                    }       
            });            
	    } else {
            // PINTA PEDIDOS
            $.ajax({
                    type:"GET",
                    dataType : 'json',
                    url: "api/v1/pedidosobs",
                       success: function(datox){
                       openbravo = orderOpenBravo(datox);
                       // Pintar Ordenes
                       buildListaOrdenes(openbravo, Orden, pedido, "");
                       document.getElementById("loader-wrapper").style.display = "none";
                },
                    error:  function(){ 
                        console.log("$> Ocurrio un error");
                        document.getElementById("div_message").innerHTML = "<h2>No se han podido obtener tus pedidos, contacta con tu proveedor.</h2></div><br><br><br><br><a href=\"/carrito\">Carrito de Compra.</a>";
                    }
            });            

        }            

	});
	
function orderContructor(){
    var rows = [];
    var rowsOrder = [];
    var subTotal = 0;
    var Total = 0;
    var Impuestos = 0;
    var qtyProductos = 0;
    var row = {};
    var rowOrder = {};
    <% Pedido.where(usuario_id: current_usuario.id).find_each do |ords|%>
        rowOrder.Order_id = <%= ords.id %>;
        <% Pedidolinea.where(pedido_id: ords.id).find_each do |lins| %>
            var strImpuesto = "<%= lins.impuesto %>";
            if (strImpuesto == "") {
                var impuesto = 0;

            } else {
                var impuesto = parseFloat(strImpuesto);
            }
            // previene el precio del producto extra nulo
            var strPrecioproductoextra = "<%= lins.precioproductoextra %>";
            if (strPrecioproductoextra == "") {
                strPrecioproductoextra = "0";
            }
            row.Order_id = <%= ords.id %>;
            row.Linea_id = <%= lins.id %>;
            row.Product_id = "<%= lins.product_id %>";
            row.Producto = "<%= lins.producto %>";
            row.Productoextra = "<%= lins.productoextra %>";
            row.Cantidad = (<%= lins.cantidad %>).toFixed(2);
            row.Precio = (<%= lins.precio %>).toFixed(2);
            row.Precioproductoextra = (parseFloat(strPrecioproductoextra)).toFixed(2);
            row.Impuesto = (impuesto).toFixed(2);
            <% if lins.impuestoextra == nil %>
                row.Impuestoextra = 0;
            <% else %>
                row.Impuestoextra = <%= lins.impuestoextra %>;
            <% end %>
            row.Total = (<%= lins.total %>).toFixed(2);
            row.Imagen = "<%= lins.imagen %>";
            subTotal = subTotal + (parseFloat(row.Precio) * parseFloat(row.Cantidad)) - (parseFloat(row.Impuesto) * parseFloat(row.Cantidad)) - (parseFloat(row.Impuestoextra) * parseFloat(row.Cantidad));
            Total = Total + parseFloat(row.Precio) * parseFloat(row.Cantidad);
            Impuestos = Impuestos + parseFloat(row.Impuesto) * parseFloat(row.Cantidad) + parseFloat(row.Impuestoextra) * parseFloat(row.Cantidad);
            qtyProductos = qtyProductos + parseFloat(row.Cantidad);
            rows.push(row);
            var row = {};
        <% end %>
        rowOrder.Subtotal = (subTotal).toFixed(2);
        rowOrder.Impuestos = (Impuestos).toFixed(2);
        rowOrder.Total = (Total).toFixed(2);
        rowOrder.Productos = (qtyProductos).toFixed(2);
        qtyProductos = 0;
        subTotal = 0;
        Total = 0;
        Impuestos = 0;
        rowsOrder.push(rowOrder);
        var rowOrder = {};
    <% end %>
      var data = {
                rows: rows,
                orders: rowsOrder,
                otherStuff: {
                    thatIMight: 1,
                    needLater: true
                }
            };
    return data;
}
function orderOpenBravo(json) {
    var rows = [];
    var jsonObject = json.response;
    for (var i=0;i<jsonObject.totalRows;i++) {
        var row = {};
        row.Pedido_ID       = jsonObject.data[i].pobPedido;
        row.Documentno      = jsonObject.data[i].documentno;
        row.Docstatus       = jsonObject.data[i].docstatus;
        row.Delivered       = jsonObject.data[i].delivered;
        switch (jsonObject.data[i].docstatus) {
            case "DR":
                row.Estado  = '<p style="font-weight:bold;color:#3498db;display:inline;">POR PROCESAR</p>';
            break
            // Nada entregado => POR ENTREGAR | Entregado parcialemente X% ENTREGADO | Entragado todo => CERRADO
            case "CO":
                if (parseFloat(row.Delivered) == 0) {
                    row.Estado  = '<p style="font-weight:bold;color:#2ecc71;display:inline;">POR ENTREGAR</p>';
                }
                if (parseFloat(row.Delivered) > 0 && parseFloat(row.Delivered) < 100) {
                    row.Estado  = '<p style="font-weight:bold;color:#2ecc71;display:inline;">' + parseFloat(row.Delivered) + '% ENTREGADO</p>';
                }
                if (parseFloat(row.Delivered) == 100) {
                    row.Estado  = '<p style="font-weight:bold;color:#e74c3c;display:inline;">CERRADO</p>'; 
                }
                //row.Estado  = '<p style="font-weight:bold;color:#2ecc71;display:inline;">POR ENTREGAR</p>';
            break
            case "CL":
                row.Estado  = '<p style="font-weight:bold;color:#e67e22;display:inline;">CERRADO</p>';
            break
            default: 
                row.Estado  = '<p style="font-weight:bold;color:#e74c3c;display:inline;">DESCONOCIDO</p>';
            break
        }
        row.Accion          = jsonObject.data[i].docaction;
        row.Procesando      = jsonObject.data[i].processing;
        row.Procesado       = jsonObject.data[i].processed;
        row.Entregado       = jsonObject.data[i].isdelivered;
        row.Facturado       = jsonObject.data[i].isinvoiced;
        row.FechaCreacion   = jsonObject.data[i].creationDate;
        row.Total           = jsonObject.data[i].total;
        row.Subtotal        = jsonObject.data[i].subtotal;
        row.Impuestos       = jsonObject.data[i].tax;
        //jsDate = new Date(strDate);
        rows.push(row);
    }
          var data = {
                ordenesob: rows
            };
    return data;
}
function buildListaOrdenes(ob, ord, pedido, html){
    if (pedido != ""){
        console.log("Se van a imprimir todos los pedidos con excepción del " + pedido);
        var todos = false;
    } else {
        console.log("Se van a imprimir todos los pedidos.");
        var todos = true;
    }
    var pedidosOB = ob.ordenesob;
    var pedidosPortal = ord.orders; 
    var lineasPortal = ord.rows;
    var htmlBuilder = "";
    // Recorrer todos los pedidos existentes en Openbravo
    var htmlBuilder = '<table width="100%">';
    htmlBuilder += '<tr><td class="headOrden">Pedido</td><td class="headOrden">Fecha</td><td class="headOrden">Subtotal</td><td class="headOrden">Impuestos</td><td class="headOrden">Total</td><td class="headOrden">Estado</td></tr>';
    for (var i=0;i<pedidosOB.length;i++) {
        var currentDate = getStandarDate(pedidosOB[i].FechaCreacion);
        htmlBuilder += '<tr><td class="rowOrden">' + pedidosOB[i].Documentno + '</td><td class="rowOrden">' + currentDate + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Subtotal).toFixed(2) + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Impuestos).toFixed(2) + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Total).toFixed(2) + '</td><td class="rowOrden">' + pedidosOB[i].Estado + '</td></tr>';
    }
    htmlBuilder += '</table>';
    // VERSION ANTERIOR (CON DETALLES)
    /*for (var i=0;i<pedidosOB.length;i++) {
        for (var j=0;j<pedidosPortal.length;j++) {
            if (pedidosOB[i].Pedido_ID == pedidosPortal[j].Order_id && (pedidosPortal[j].Order_id != pedido || todos == true)) {
                htmlBuilder += '<div align="left" class="headRow"><h2>PEDIDO # ' + pedidosOB[i].Documentno + '</h2><br>ESTADO: ' + pedidosOB[i].Estado + ' Total: ' + pedidosOB[i].Total + '<br><!--<a href="javascript:mostrarDetalle(\'' + pedidosOB[i].Documentno + '\')">Detalles</a>--></div>';
                htmlBuilder += '<div align="center" class="lineGrid" id="lineGrid_' + pedidosOB[i].Documentno + '" style="display:none;">';
                for (var k=0;k<lineasPortal.length;k++) {
                    if (pedidosPortal[j].Order_id == lineasPortal[k].Order_id && (lineasPortal[k].Order_id != pedido || todos == true)){
                        // PINTAR DETALLES DE LA LINEA lineasPortal[k].propiedad
                        htmlBuilder += '<div style="border:0px solid grey;" id="' + lineasPortal[k].Product_id + '_ROW">';
                        htmlBuilder += '<div align="center" class="imgGrid" style="float:left;"><img src="' + lineasPortal[k].Imagen + '" height="50px"></img></div>';
                        if (lineasPortal[k].Productoextra != "null") {
                            htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + ' + ' + lineasPortal[k].Productoextra + '</div>';
                            htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles((parseFloat(lineasPortal[k].Precio) - parseFloat(lineasPortal[k].Precioproductoextra)).toFixed(2)) + ' + $' + separaMiles(lineasPortal[k].Precioproductoextra) +'</div>';
                        } else {
                            htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + '</div>';                            
                            htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Precio) + '</div>';
                        }

                        htmlBuilder += '<div align="center" class="qtyGrid" style="float:left;"><input class="chng_qty" type="text" value="' + separaMiles(lineasPortal[k].Cantidad) + '" id="' + lineasPortal[k].Linea_id + '_Cantidad" readonly   /></div>';
                        htmlBuilder += '<div align="right" id="totalGrid" class="totalGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Total) + '<br></div>';
                        htmlBuilder += '</div>';                        
                    }
                }
            htmlBuilder += '</div>';
            // Totales del pedido
            htmlBuilder += '<div style="border:0px solid red;float:left;width:100%;" id="' + pedidosOB[i].Documentno + '_blank">&nbsp;</div>';
            htmlBuilder += '<div class="netQty" id="' + pedidosOB[i].Documentno + '_qty" style="border:0px solid red;float:left;width:10%;display:none">' + separaMiles(pedidosPortal[j].Productos) + ' </div>';
            htmlBuilder += '<div class="netTotal" id="' + pedidosOB[i].Documentno + '_total" style="border:0px solid blue;float:left;width:20%;display:none">';
            htmlBuilder += '<div class="subtotal" align="right">Subtotal: $' + separaMiles(pedidosPortal[j].Subtotal) + '</div>';
            htmlBuilder += '<div class="impuestos" align="right">Impuestos: $' + separaMiles(pedidosPortal[j].Impuestos) + '</div>';
            htmlBuilder += '<div class="total" align="right">Total: $' + separaMiles(pedidosPortal[j].Total) + '</div></div><br>';
            }
        }
    }*/
    // PINTAR EN div
    document.getElementById("div_message").innerHTML = html + htmlBuilder;
}
function buildListaOrden(ob, ord, pedido){
    if (pedido != ""){
        console.log("Se va a imprimir el encabezado con el pedido " + pedido);
        // EL SIGUIENTE PASO ES QUE SOLO SE IMPRIMA ESTE PEDIDO
    } else {
        console.log("No se puede imprimir el encabezado por que no existe un id de pedido");
    }
    var pedidosOB = ob.ordenesob;
    var pedidosPortal = ord.orders; 
    var lineasPortal = ord.rows;
    var htmlBuilder = "";
    var mensaje = " y ha sido completado con éxito";
    var tipoAlerta = "success";
    // Recorrer todos los pedidos existentes en Openbravo
    var htmlBuilder = '<table width="100%">';
    htmlBuilder += '<tr><td class="headOrden">Pedido</td><td class="headOrden">Fecha</td><td class="headOrden">Subtotal</td><td class="headOrden">Impuestos</td><td class="headOrden">Total</td><td class="headOrden">Estado</td></tr>';
    for (var i=0;i<pedidosOB.length;i++) {
        var currentDate = getStandarDate(pedidosOB[i].FechaCreacion);
        htmlBuilder += '<tr><td class="rowOrden">' + pedidosOB[i].Documentno + '</td><td class="rowOrden">' + currentDate + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Subtotal).toFixed(2) + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Impuestos).toFixed(2) + '</td><td class="rowOrden">$' + parseFloat(pedidosOB[i].Total).toFixed(2) + '</td><td class="rowOrden">' + pedidosOB[i].Estado + '</td></tr>';
    }
    htmlBuilder += '</table>';
    // VERSION CON DETALLE
    /*for (var i=0;i<pedidosOB.length;i++) {
        for (var j=0;j<pedidosPortal.length;j++) {
            if (pedidosOB[i].Pedido_ID == pedidosPortal[j].Order_id && pedidosPortal[j].Order_id == pedido){
                if (pedidosOB[i].Docstatus != "CO") {
                    mensaje = " Pero no se ha completado correctamente, comunicate con tu proveedor para que el pedido pueda ser completado";
                    tipoAlerta = "warning";
                }
                document.getElementById("alerta_orden").innerHTML = '<div id="alert_limite" class="alert alert-'+tipoAlerta+' alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4>Correcto!</h4><p>Se ha creado el pedido ' + pedidosOB[i].Documentno + ' correctamente ' + mensaje + '.</p></div>';
                //htmlBuilder += '<div class="headRow">PEDIDO #2342 ESTADO: POR ENTREGAR</div>';
                //htmlBuilder += '<div align="left" class="headRow"><h2>PEDIDO # ' + pedidosPortal[j].Order_id + '</h2><br>ESTADO: ' + pedidosOB[i].Estado + '<br></div>';
                htmlBuilder += '<div align="left" class="headRow"><h2>PEDIDO # ' + pedidosOB[i].Documentno + '</h2><br>ESTADO: ' + pedidosOB[i].Estado + '<br><a href="javascript:mostrarDetalle(\'' + pedidosOB[i].Documentno + '\')">Detalles</a></div>';
                htmlBuilder += '<div align="center" class="lineGrid" id="lineGrid_' + pedidosOB[i].Documentno + '" style="display:none;">';
                for (var k=0;k<lineasPortal.length;k++) {
                    if (pedidosPortal[j].Order_id == lineasPortal[k].Order_id && lineasPortal[k].Order_id == pedido) {
                        // PINTAR DETALLES DE LA LINEA lineasPortal[k].propiedad
                        htmlBuilder += '<div style="border:0px solid grey;" id="' + lineasPortal[k].Product_id + '_ROW">';
                        htmlBuilder += '<div align="center" class="imgGrid" style="float:left;"><img src="' + lineasPortal[k].Imagen + '" height="50px"></img></div>';
                        //htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + '</div>';
                        //htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Precio) + '</div>';
                        if (lineasPortal[k].Productoextra != "" && lineasPortal[k].Productoextra != "null") {
                            htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + ' + ' + lineasPortal[k].Productoextra + '</div>';
                            htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles((parseFloat(lineasPortal[k].Precio) - parseFloat(lineasPortal[k].Precioproductoextra)).toFixed(2)) + ' + $' + separaMiles(lineasPortal[k].Precioproductoextra) +'</div>';
                        } else {
                            htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + '</div>';                            
                            htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Precio) + '</div>';
                        }

                        htmlBuilder += '<div align="center" class="qtyGrid" style="float:left;"><input class="chng_qty" type="text" value="' + separaMiles(lineasPortal[k].Cantidad) + '" id="' + lineasPortal[k].Linea_id + '_Cantidad" readonly   /></div>';
                        htmlBuilder += '<div align="right" id="totalGrid" class="totalGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Total) + '<br></div>';
                        htmlBuilder += '</div>';                        
                    }
                }
            // PINTAR DETALLES DEL PEDIDO pedidosPortal[j].propiedad
            htmlBuilder += '</div>';
            htmlBuilder += '<div style="border:0px solid red;float:left;width:100%;" id="' + pedidosOB[i].Documentno + '_blank">&nbsp;</div>';
            htmlBuilder += '<div class="netQty" id="' + pedidosOB[i].Documentno + '_qty" style="border:0px solid red;float:left;width:10%;display:none">' + separaMiles(pedidosPortal[j].Productos) + ' </div>';
            htmlBuilder += '<div class="netTotal" id="' + pedidosOB[i].Documentno + '_total" style="border:0px solid blue;float:left;width:20%;display:none">';
            htmlBuilder += '<div class="subtotal" align="right">Subtotal: $' + separaMiles(pedidosPortal[j].Subtotal) + '</div>';
            htmlBuilder += '<div class="impuestos" align="right">Impuestos: $' + separaMiles(pedidosPortal[j].Impuestos) + '</div>';
            htmlBuilder += '<div class="total" align="right">Total: $' + separaMiles(pedidosPortal[j].Total) + '</div></div><br>';
            }
        }
    }*/
    // PINTAR EN div
    //document.getElementById("div_message").innerHTML = htmlBuilder;
    //console.log("%> " + html + htmlBuilder);
    return htmlBuilder;
}
function buildError(param) {
    // Gestionar los errores
    if (param.indexOf('violates not-null constraint') != -1 && param.indexOf('c_tax_id') != -1) {
        error = "No se ha podido colocar tu orden debido a que uno de los productos agregados a tu orden pertenece a una categoría de impuesto que no tiene asignado un impuesto por defecto.";
    } else if (param.indexOf("Ya existe un pedido con referencia a la orden") != -1) {
        error = "No se ha podido colocar tu orden debido a que ya existe en el sistema un pedido con la misma referencia, comunicate con tu proveedor.";
    } else {
        error = "Tu pedido no se ha podido generar debido a un error inesperado, comunicate con tu proveedor.";
    }
    document.getElementById("div_message").innerHTML = "<h2>" + error + "</h2></div><br><br><br><br><a href=\"/catalogoproductos\">Cátalogo de productos.</a>";
    document.getElementById("loader-wrapper").style.display = "none";
}
function buildListaOrdenX(ob, ord, pedido){
    if (pedido != ""){
        console.log("Se va a imprimir el encabezado con el pedido " + pedido);
        // EL SIGUIENTE PASO ES QUE SOLO SE IMPRIMA ESTE PEDIDO
    } else {
        console.log("No se puede imprimir el encabezado por que no existe un id de pedido");
    }
    var pedidosOB = ob.ordenesob;
    var pedidosPortal = ord.orders; 
    var lineasPortal = ord.rows;
    var htmlBuilder = "";
    // Recorrer todos los pedidos existentes en Openbravo
    for (var i=0;i<pedidosOB.length;i++) {
        for (var j=0;j<pedidosPortal.length;j++) {
            if (pedidosOB[i].Pedido_ID == pedidosPortal[j].Order_id && pedidosPortal[j].Order_id == pedido){
                //htmlBuilder += '<div class="headRow">PEDIDO #2342 ESTADO: POR ENTREGAR</div>';
                //htmlBuilder += '<div align="left" class="headRow"><h2>PEDIDO # ' + pedidosPortal[j].Order_id + '</h2><br>ESTADO: ' + pedidosOB[i].Estado + '<br></div>';
                htmlBuilder += '<div align="left" class="headRow"><h2>PEDIDO # ' + pedidosOB[i].Documentno + '</h2><br>ESTADO: ' + pedidosOB[i].Estado + '<br></div>';
                htmlBuilder += '<div align="center" class="lineGrid" id="lineGrid">';
                for (var k=0;k<lineasPortal.length;k++) {
                    if (pedidosPortal[j].Order_id == lineasPortal[k].Order_id && lineasPortal[k].Order_id == pedido) {
                        // PINTAR DETALLES DE LA LINEA lineasPortal[k].propiedad
                        htmlBuilder += '<div style="border:0px solid grey;" id="' + lineasPortal[k].Product_id + '_ROW">';
                        htmlBuilder += '<div align="center" class="imgGrid" style="float:left;"><img src="' + lineasPortal[k].Imagen + '" height="100px"></img></div>';
                        htmlBuilder += '<div align="left" class="nameGrid" style="float:left;">' + lineasPortal[k].Producto + '</div>';
                        htmlBuilder += '<div align="right" id="' + lineasPortal[k].Linea_id + '_Precio" class="priceGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Precio) + '</div>';
                        htmlBuilder += '<div align="center" class="qtyGrid" style="float:left;"><input class="chng_qty" type="text" value="' + separaMiles(lineasPortal[k].Cantidad) + '" id="' + lineasPortal[k].Linea_id + '_Cantidad" readonly   /></div>';
                        htmlBuilder += '<div align="right" id="totalGrid" class="totalGrid" style="float:left;">$' + separaMiles(lineasPortal[k].Total) + '<br></div>';
                        htmlBuilder += '</div>';                        
                    }
                }
            // PINTAR DETALLES DEL PEDIDO pedidosPortal[j].propiedad
            htmlBuilder += '</div>';
            htmlBuilder += '<div style="border:0px solid red;float:left;width:70%;">&nbsp;</div>';
            htmlBuilder += '<div class="netQty" id="netQty" style="border:0px solid red;float:left;width:10%;">' + separaMiles(pedidosPortal[j].Productos) + '</div>';
            htmlBuilder += '<div class="netTotal" style="border:0px solid red;float:left;width:20%;">';
            htmlBuilder += '<div class="subtotal" id="idSubTotal" align="right">Subtotal: $' + separaMiles(pedidosPortal[j].Subtotal) + '</div><hr>';
            htmlBuilder += '<div class="total"  id="idTotal" align="right">Total: $' + separaMiles(pedidosPortal[j].Total) + '</div></div>';
            }
        }
    }
    // PINTAR EN div
    //document.getElementById("div_message").innerHTML = htmlBuilder;
    return htmlBuilder;
}
function separaMiles(numero){ 
    // Variable que contendra el resultado final
    numero = numero.toString();
    var resultado = "";
    
    // Si el numero empieza por el valor "-" (numero negativo)
    if(numero[0]=="-")
    {
        // Cogemos el numero eliminando los posibles puntos que tenga, y sin
        // el signo negativo
        nuevoNumero=numero.replace(/\,/g,'').substring(1);
    }else{
        // Cogemos el numero eliminando los posibles puntos que tenga
        nuevoNumero=numero.replace(/\,/g,'');
    }
    
    // Si tiene decimales, se los quitamos al numero
    if(numero.indexOf(".")>=0)
        nuevoNumero=nuevoNumero.substring(0,nuevoNumero.indexOf("."));

    // Ponemos un punto cada 3 caracteres
    for (var j, i = nuevoNumero.length - 1, j = 0; i >= 0; i--, j++) 
        resultado = nuevoNumero.charAt(i) + ((j > 0) && (j % 3 == 0)? ",": "") + resultado; 
    
    // Si tiene decimales, se lo añadimos al numero una vez forateado con 
    // los separadores de miles
    if(numero.indexOf(".")>=0)
        resultado+=numero.substring(numero.indexOf("."), numero.indexOf(".")+3);

    if(numero[0]=="-")
    {
        // Devolvemos el valor añadiendo al inicio el signo negativo
        return "-"+resultado;
    }else{
        return resultado;
    }
}
function mostrarDetalle(documentno) {
    var id = "lineGrid_" + documentno;
    var idBlank = documentno + "_blank";
    var idTotal = documentno + "_total";
    var idQty = documentno + "_qty";

    var actual = document.getElementById(id).style.display;
    if (actual == "none") {
        document.getElementById(id).style.display = "block";
        document.getElementById(idTotal).style.display = "block";
        document.getElementById(idQty).style.display = "block";
        document.getElementById(idBlank).style.width = "70%";
        document.getElementById(idBlank).style.display = "block";
    } else {
        document.getElementById(id).style.display = "none";
        document.getElementById(idTotal).style.display = "none";
        document.getElementById(idQty).style.display = "none";
        document.getElementById(idBlank).style.display = "none";
    }
}
function getStandarDate(strDate){
    var datex = new Date(strDate);
    var day = datex.getDate();
    var month = datex.getMonth();
    var year = datex.getFullYear();
    switch (month) {
        case 0:
            month = "Enero";
        break;
        case 1: 
            month = "Febrero";
        break;
        case 2:
            month = "Marzo";
        break;
        case 3:
            month = "Abril";
        break;
        case 4:
            month = "Mayo";
        break;
        case 5:
            month = "Junio";
        break;
        case 6:
            month = "Julio";
        break;
        case 7:
            month = "Agosto";
        break;
        case 8:
            month = "Septiembre";
        break;
        case 9:
            month = "Octubre";
        break;
        case 10:
            month = "Noviembre";
        break;
        case 11:
            month = "Diciembre";
        break;
        default:
            month = month;     
    }
    return day + " - " + month + " - " + year;
}
</script>
</html>