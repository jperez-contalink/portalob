<!DOCTYPE html>

<html>
<head>
    <title>CNTCTO</title>
    <style>
    .lineGrid {
        width: 100%;
        height: 100%;
        border: 0px solid red;
        padding: 1% 1% 1% 1%;
    }
    .imgGrid {
        width: 20%;
        height: 120px;
        border: 0px solid black;
        border-bottom: 1px solid #E6E6E6;
    }
    .nameGrid {
        width: 30%;
        height: 120px;
        border: 0px solid black;
        padding: 1% 1% 1% 1%;
        font-size: 150%;
        font-weight: bold;
        border-bottom: 1px solid #E6E6E6;
    }
    .priceGrid {
        width: 20%;
        height: 120px;
        border: 0px solid black;
        padding: 1% 1% 1% 1%;
        color: black;
        border-bottom: 1px solid #E6E6E6;
    }
    .qtyGrid {
        width: 10%;
        height: 120px;
        border: 0px solid black;
        padding: .5% 0% 1% 0%;
        color: black;
        border-bottom: 1px solid #E6E6E6;
    }
    .qtyGrid input[type=text] {
        width: 50%;
        text-align:center;
        border-radius: 5px;
    }
    .totalGrid {
        width: 20%;
        height: 120px;
        border: 0px solid black;
        padding: 1% 1% 1% 1%;
        font-size: 130%;
        font-weight: bold;
        border-bottom: 1px solid #E6E6E6;
    } 
    .netQty {
        padding: 2% 3% 0% 4%;
        font-size: 110%;
        font-weight: bold;
    }   
    .netTotal {
        padding-top: 2%;
    }
    .subtotal {
        padding: 0% 10% 0% 0%;
        font-size: 130%;
        font-weight: bold;
    }
    .impuestos {
        padding: 5% 10% 5% 0%;
        font-size: 130%;
    }
    .total {
        padding: 0% 10% 0% 0%;
        font-size: 160%;
        font-weight: bold;
    }
    .totalGrid a{
        font-weight: normal;    
        font-size: 80%;
    }
    .btn-sbmt {
        width: 20%;
        border-radius: 5px;
        padding: 1% 0% 1% 0%;
    }
    .btn-save {
        width: 20%;
        border-radius: 5px;
        padding: 1% 0% 1% 0%;
    }    
    </style>
</head>
<body>
<br><br><br><br><br>
<div id="alerta_carrito"></div>
<div align="center" id="divtitulo"><h2>Carrito</h2></div><br><br>
<form accept-charset="UTF-8" id="carrito_form" action="/carrito" method="POST" onsubmit="return Validacion()">
    <div id="div_container" width="100%" style="border:0px solid black;"/>
    <div id="car_pro" width="100%" style="border:0px solid black;"/>
</form>
</body>
  <script type="text/javascript"> 
    // ROLES ROLES ROLES
    <% if current_usuario.role != "Cliente" %>
    console.log("RESTRICTED");
    document.getElementById("car_pro").remove();
    window.location.href="/unauthorized"
    <% end %>
    // ROLES  
  var allData = {};
  var newData = {};
  var dropLineas = "";
  var changeLineas = "";
  $(document).ready( function() {
    console.log("CARRITO.");
    var cart = $('#car_pro').Carrito({
      koalas: "kaolitis"
    }).data('Carrito');
  console.log("$> Sigue");
  allData = orderContructor();
  newData = allData;
  cart.setData(allData);
  //keydown / change
  $(document).on('change', '.chng_qty', function (e) {
    e.preventDefault();
    console.log("Cambiar Cantidad de la linea " + (e.currentTarget.id).replace("_Cantidad", "") + " a " + e.currentTarget.value);
    var id = (e.currentTarget.id).replace("_Cantidad", "");
    if (e.currentTarget.value > 0 && e.currentTarget.value < 1000000) {
        var value = e.currentTarget.value;
    } else {
        value = 1;
    }
    console.log("%> TEST ", newData);
    newData = cambiaCantidad(id, value);
    recalcularTotales();
    cart.setData(newData);
        // SERVICIO PRUEBAS
    $.ajax({
        type:"GET",
        dataType : 'html',
        url: "/cambia_linea?linea_id=" + id + "&valor=" + value,
        success: function(datox){
        console.log("$> Datos: ", datox);
    },
        error:  function(){ 
            console.log("$> Ocurrio un error");
        //var mensajeError = '<br><br><br><div align="center"><h1>Ups!! algo ha salido mal.</h1><h3>No ha sido posible entablar comunicación, por favor comuniquese con su proveedor.</h3></div>'
        //document.getElementById("car_pro").innerHTML = mensajeError;
        }
    });
    // SERVICIO PRUEBAS
  });
  $(document).on('click', '.drop_lin', function (e) {
    e.preventDefault();
    console.log("Borrar Linea " + (e.currentTarget.id).replace("_Drop", ""));
    var id = (e.currentTarget.id).replace("_Drop", "");
    newData = borraLinea(id);
    recalcularTotales();
    cart.setData(newData);
    //cart.setData(newData);
        // SERVICIO PRUEBAS
    $.ajax({
        type:"GET",
        dataType : 'html',
        url: "/borrar_linea?linea_id=" + id,
        success: function(datox){
        console.log("$> Datos: ", datox);
    },
        error:  function(){ 
            console.log("$> Ocurrio un error");
        //var mensajeError = '<br><br><br><div align="center"><h1>Ups!! algo ha salido mal.</h1><h3>No ha sido posible entablar comunicación, por favor comuniquese con su proveedor.</h3></div>'
        //document.getElementById("car_pro").innerHTML = mensajeError;
        }
    });
    // SERVICIO PRUEBAS
  });
  $(document).on('click', '.btn_save', function (e) {
    e.preventDefault();
    console.log("Guardar Cambios ", e);
    window.location="/catalogoproductos";
    //guardarCambios();
  });
  $(document).on('click', '.btn_sbmt', function (e) {
    console.log("Colocar Pedido ", e);
    document.getElementById("btn_submit").disabled = true;
    e.preventDefault();
    Validacion();
  });
  $(document).on('click', '.sbmt_pedido', function (e) {
    console.log("sbmt_pedido!!!!!!!!!!!!");
    document.getElementById("btn_submit").disabled = true;
    Validacion();
  });
// FUNCIONES  
function Validacion() {   
    console.log("Submit Forma");
    //document.getElementById('hdn_sbmt').value = "Y";
    //document.getElementById('productos_drop').value = dropLineas;
    //document.getElementById('productos_change').value = changeLineas;
    document.getElementById("carrito_form").submit();    
}
function guardarCambios(){
    console.log("FNCT: Guardar cambios");
    document.getElementById('hdn_save').value = "Y"; 
    document.getElementById('productos_drop').value = dropLineas;
    document.getElementById('productos_change').value = changeLineas;
    //document.getElementById("carrito_form").submit();    
    window.location="/catalogoproductos";
}  
function goCatalogo(){
    window.location="/catalogoproductos";
}
function orderContructor(){
    var rows = [];
    var rowsOrder = [];
    var subTotal = 0;
    var qtyProductos = 0;
    var Impuestos = 0;
    var Impuestosextra = 0;
    var Total = 0;
    var row = {};
    var rowOrder = {};
    <% Pedido.where(usuario_id: current_usuario.id, activo: true).find_each do |ords|%>
        rowOrder.Order_id = <%= ords.id %>;
        <% Pedidolinea.where(pedido_id: ords.id).find_each do |lins| %>
            row.Order_id = <%= ords.id %>;
            row.Linea_id = <%= lins.id %>;
            row.Product_id = "<%= lins.product_id %>";
            row.Producto = "<%= lins.producto %>";
            row.Productoextra = "<%= lins.productoextra %>";
            row.Cantidad = (<%= lins.cantidad %>).toFixed(2);
            row.Precio = (<%= lins.precio %>).toFixed(2);
            row.Precioproductoextra = (<%= lins.precioproductoextra %>).toFixed(2);
            row.Impuesto = (<%= lins.impuesto %>).toFixed(2);
            row.Total = (<%= lins.total %>).toFixed(2);
            <% if lins.maximo == nil %>
                row.Maximo = 100;
            <% else %>
                row.Maximo = <%= lins.maximo %>
            <% end %>
            <% if lins.impuestoextra == nil %>
                row.Impuestoextra = 0;
            <% else %>
                row.Impuestoextra = <%= lins.impuestoextra %>;
            <% end %>
            row.Imagen = "<%= lins.imagen %>";
            row.imagenId = "<%= lins.adimageid %>";
            subTotal = subTotal + (parseFloat(row.Precio) * parseFloat(row.Cantidad)) - (parseFloat(row.Impuesto) * parseFloat(row.Cantidad)) - (parseFloat(row.Impuestoextra) * parseFloat(row.Cantidad));
            Impuestos = Impuestos + parseFloat(row.Impuesto) * parseFloat(row.Cantidad);
            Impuestosextra = Impuestosextra + parseFloat(row.Impuestoextra) * parseFloat(row.Cantidad);
            Total = Total + parseFloat(row.Precio) * parseFloat(row.Cantidad);
            qtyProductos = qtyProductos + parseFloat(row.Cantidad);
            rows.push(row);
            var row = {};
        <% end %>
        rowOrder.Subtotal   = (subTotal).toFixed(2);
        console.log("IMPUESTOS: " + Impuestos + " IMPS EXTRA: " + Impuestosextra + "TOTAL: " + (Impuestos+Impuestosextra));
        rowOrder.Impuestos = (parseFloat(Impuestos)+parseFloat(Impuestosextra)).toFixed(2);
        rowOrder.Total      = (Total).toFixed(2);
        rowOrder.Productos  = (qtyProductos).toFixed(2);
        rowsOrder.push(rowOrder);
        var rowOrder = {};
    <% end %>
      var data = {
                rows: rows,
                orders: rowsOrder,
                otherStuff: {
                    thatIMight: 1,
                    needLater: true
                }
            };
    // Si el carrito no tiene nada despliega mensaje de carrito vacío: 

    return data;
}
function cambiaCantidad(id, value) {
    // recorre newData y elimina la linea
    console.log("FCNT: Modifica linea: " + id);
    changeLineas += id + "_" + value + ",";
    var nuevosDatos = [];
    var nuevaLinea = {};
    var jsonRows = newData.rows;
    for (var j=0;j<jsonRows.length;j++) {  
        if (jsonRows[j].Linea_id == id) {
            //nuevosDatos.push(jsonRows[j]);
            nuevaLinea.Order_id = jsonRows[j].Order_id;
            nuevaLinea.Linea_id = jsonRows[j].Linea_id;
            nuevaLinea.Product_id = jsonRows[j].Product_id;
            nuevaLinea.Producto = jsonRows[j].Producto;
            nuevaLinea.Productoextra = jsonRows[j].Productoextra;
            nuevaLinea.Impuestoextra = jsonRows[j].Impuestoextra;
            if (parseFloat(value) > parseFloat(jsonRows[j].Maximo)) {
                nuevaLinea.Cantidad = jsonRows[j].Maximo;   
                document.getElementById('alerta_carrito').innerHTML = buildAlertWarning("Inventario Insuficiente", "El producto " + jsonRows[j].Producto + " sólo tiene disponibles " + jsonRows[j].Maximo + " unidades, hemos cambiado la línea por ti.");
            } else {
                nuevaLinea.Cantidad = value;
            }
            nuevaLinea.Precio = jsonRows[j].Precio;
            nuevaLinea.Precioproductoextra = jsonRows[j].Precioproductoextra;
            nuevaLinea.Impuesto = jsonRows[j].Impuesto;
            nuevaLinea.Maximo = jsonRows[j].Maximo;
            nuevaLinea.Total = (value*parseFloat(jsonRows[j].Precio)).toFixed(2);
            nuevaLinea.Imagen = jsonRows[j].Imagen;
            nuevosDatos.push(nuevaLinea);                
        } else {
            nuevosDatos.push(jsonRows[j]);
        }
    }
    var newRows = {
            rows: nuevosDatos,
            orders: newData.orders,
            otherStuff: {
                thatIMight: 1,
                needLater: true
            }
        };
    return newRows;
}
function borraLinea(id) {
    console.log("FCNT: Borrar Linea: " + id);
    dropLineas += id + "_";
    
    var nuevosDatos = [];
    var jsonRows = newData.rows;
    for (var j=0;j<jsonRows.length;j++) {  
        if (jsonRows[j].Linea_id != id) {
            nuevosDatos.push(jsonRows[j]);
        }
    }
    var newRows = {
            rows: nuevosDatos,
            orders: newData.orders,
            otherStuff: {
                thatIMight: 1,
                needLater: true
            }
        };
    return newRows;
}
function recalcularTotales() {
    // recorre newData y asigna los nuevos totales en newData
    var jsonOrders = newData.orders;
    var jsonRows = newData.rows;
    console.log("FCNT:newData: ", newData);
    var newOrders = [];
    var newOrder = {};
    var ordQty = 0;
    var ordTotal = 0;
    var ordSubTotal = 0;
    var ordImpuestos = 0;
    for (var i=0;i<jsonOrders.length;i++) {    
        for (var j=0;j<jsonRows.length;j++) {  
            if (jsonOrders[i].Order_id == jsonRows[j].Order_id) {
                    ordQty = ordQty + parseFloat(jsonRows[j].Cantidad);
                    ordSubTotal = ordSubTotal + (parseFloat(jsonRows[j].Precio)*parseFloat(jsonRows[j].Cantidad)) - (parseFloat(jsonRows[j].Impuesto)*parseFloat(jsonRows[j].Cantidad)) - (parseFloat(jsonRows[j].Impuestoextra)*parseFloat(jsonRows[j].Cantidad));
                    ordImpuestos = ordImpuestos + (parseFloat(jsonRows[j].Impuesto)*parseFloat(jsonRows[j].Cantidad)) + (parseFloat(jsonRows[j].Impuestoextra)*parseFloat(jsonRows[j].Cantidad));
                    ordTotal = ordTotal + (parseFloat(jsonRows[j].Precio)*parseFloat(jsonRows[j].Cantidad));
            }
        }
        newOrder.Order_id = jsonOrders[i].Order_id;
        newOrder.Subtotal = ordSubTotal.toFixed(2);
        newOrder.Impuestos = ordImpuestos.toFixed(2);
        newOrder.Total = ordTotal.toFixed(2);
        newOrder.Productos = ordQty.toFixed(2);
        newOrders.push(newOrder);
        var newOrder = {};
    }
    newData.orders = newOrders;
}
function buildAlertWarning(titulo, mensaje){
  return '<div id="alert_limite" class="alert alert-warning alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4>' + titulo + '</h4><p>' + mensaje + '</p></div>';
}
});
</script>
</html>